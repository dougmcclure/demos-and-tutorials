input {

# nail up a tcp port for the Netcool Socket GW to connect to

	tcp {
		type => "NetcoolEventStream"
		format => "plain"
		port => 1234
		data_timeout => -1
	} #end tcp

} # end inputs

filter {

# start with a simple group of fields from alerts.status, assumes Socket GW set up similarly to what was discussed here: http://dougmcclure.net/blog/2013/11/event-analysis-using-smartcloud-analytics-log-analysis-scala-v1103-setting-up-netcoolomnibus/

if [type] == "NetcoolEventStream" {

    csv { 
	
		columns => ["Identifier","Serial","LastOccurrence","FirstOccurrence","Node","NodeAlias","Summary","Severity","Manager","Agent","AlertGroup","AlertKey","Type","Tally","Class","Grade","Location"]
	
		add_field => ["scalaFields", "Identifier"]
		add_field => ["scalaFields", "Serial"]
		add_field => ["scalaFields", "LastOccurrence"]
		add_field => ["scalaFields", "FirstOccurrence"]
		add_field => ["scalaFields", "Node"]
		add_field => ["scalaFields", "NodeAlias"]
		add_field => ["scalaFields", "Summary"]
		add_field => ["scalaFields", "Severity"]
		add_field => ["scalaFields", "Manager"]
		add_field => ["scalaFields", "Agent"]
		add_field => ["scalaFields", "AlertGroup"]
		add_field => ["scalaFields", "AlertKey"]
		add_field => ["scalaFields", "Type"]
		add_field => ["scalaFields", "Tally"]
		add_field => ["scalaFields", "Class"]
		add_field => ["scalaFields", "Grade"]
		add_field => ["scalaFields", "Location"]

	add_tag => ["mynetcoolevents-csvd"]

	} #end csv

} #end conditional


#set the host and path value for the SCALA datasource

if "mynetcoolevents-csvd" in [tags] {

	mutate {
		replace => [ "host", "mynetcoolevents", "path", "mynetcoolevents" ]
		add_tag => [ "mynetcoolevents-final" ]
		
	} #end mutate
	
} #end conditional

} #end filters

output {

# define a scala output connection

	scala_custom_eif {
        eif_config => "/opt/logstash-1.4.0/lib/logstash/outputs/eif-scala-10.0.0.1.conf"
        debug_log =>  "/tmp/scala/scala-logstash-scala-10.0.0.1.log"
        debug_level => "debug"
    } #end scala 10.0.0.1 output

} #end outputs